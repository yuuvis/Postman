{
	"info": {
		"_postman_id": "e8b6d122-f20c-4804-bc05-240485b5bf3d",
		"name": "Yuuvis® Postman Collection 2.0",
		"description": "This collection expects a Postman environment with the following variables:\n\n\"ip\": the IP of the yuuvis® system that you want to test \n\n\"objectId\": the ID of the object that you're currently tryingt to retrieve",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Store a single document",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "multipart/form-data",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"description": "JSON-File containing metadata for a single object.",
							"type": "file",
							"src": []
						},
						{
							"key": "cid_63apple",
							"description": "Content object to be imported.",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects",
					
					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects"
					]
				},
				"description": "The **“Store one or more documents”** endpoint imports a given metadata file, and optionally, one or more content files, as objects in the authenticated users’ yuuvis® tenant storage. \r\n\r\nSave your metadata as file (e.g. metadata.json) and use it for the ‘data’ body part. For the binary content, the cid_63apple parameter, you can use any file you'd like to store. \r\n\r\nIf the request is successful, the metadata of the now stored document will be returned in JSON format. \r\n\r\n[Read about Storing Documents with the yuuvis® API](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Store multiple documents",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"description": "JSON-File containing metadata for multiple objects.",
							"type": "file",
							"src": []
						},
						{
							"key": "cid_63apple",
							"description": "First content object to be imported.",
							"type": "file",
							"src": []
						},
						{
							"key": "cid_60apple",
							"description": "Second content object to be imported.",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects"
					]
				},
				"description": "The **“Store one or more documents”** endpoint imports a given metadata file, and optionally, one or more content files, as objects in the authenticated users’ yuuvis® tenant storage. \r\n\r\nSave your metadata as file (e.g. metadata.json) and use it for the ‘data’ body part. For the binary content, the cid_63apple parameter, you can use any file you'd like to store. \r\n\r\nIf the request is successful, the metadata of the now stored document will be returned in JSON format. \r\n\r\n[Read about Storing Documents with the yuuvis® API](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Get document metadata by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}"
					]
				},
				"description": "The **“Get document metadata by ID”** endpoint returns the metadata related to the document (object) that matches the *objectId* path parameter. \r\n\r\n[Read about Retrieving Documents with the yuuvis® API ](https://yuuvis.io/Documentation/Retrieve-documents)\r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Get document metadata by ID (specified version)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/versions/1",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"versions",
						"1"
					]
				},
				"description": "The **“Get document metadata by ID (specified version)”** endpoint returns the metadata of the version matching the *versionNr* path parameter of the document (object) that matches the *objectId* path parameter.\n\n[Read about Retrieving Documents with the yuuvis® API](https://yuuvis.io/Documentation/Retrieve-documents)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store) \n\nThe versionNr path parameter must point to an existing version of the specified object. [Read about versioning with the yuuvis® API.](https://yuuvis.io/Documentation/Update-documents#UpdatingDocumentsviaCoreAPI-Versioningversioning)"
			},
			"response": []
		},
		{
			"name": "Get document content by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/contents/file",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"contents",
						"file"
					]
				},
				"description": "The **“Get document content by ID”** returns the original content file of the document (object) that matches the *objectId* path parameter. \r\n\r\n[Read about Retrieving Documents with the yuuvis® API](https://yuuvis.io/Documentation/Retrieve-documents) \r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Get document content by ID (specified version)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/versions/{{versionNr}}/contents/file",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"versions",
						"{{versionNr}}",
						"contents",
						"file"
					]
				},
				"description": "The **“Get document content by ID (specified version)”** endpoint returns the content of the version matching the *versionNr* path parameter of the document (object) that matches the *objectId* path parameter. \n\n[Read about Retrieving Documents with the yuuvis® API ](https://yuuvis.io/Documentation/Retrieve-documents) \n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store) \n\nThe versionNr path parameter must point to an existing version of the specified object. [Read about versioning with the yuuvis® API.](https://yuuvis.io/Documentation/Update-documents#UpdatingDocumentsviaCoreAPI-Versioningversioning)"
			},
			"response": []
		},
		{
			"name": "Search documents by search query",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"query\": {\r\n    \"statement\": \"SELECT * FROM system:object\",\r\n    \"skipCount\": 0,\r\n    \"maxItems\": 50\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects/search",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"search"
					]
				},
				"description": "The **“Search documents by search query”** endpoint requires a JSON body containing your search query. \r\n\r\nThe search parameters *skipCount* and *maxItems* allow paging for search queries, whereby *maxItems* defines the maximum number of entries in the hit list and *skipCount* the maximum number of entries to be skipped. \r\n\r\n[Learn about the yuuvis® CMIS-Based Query Language](https://yuuvis.io/Documentation/Query-language)"
			},
			"response": []
		},
		{
			"name": "Get a list of history entries by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/history",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"history"
					]
				},
				"description": "The **“Get a list of history entries by ID”** endpoint retrieves information about the actions and modifications that have been carried out for the given document (object) that matches the *objectId* path parameter. \r\n\r\nEach action or modification is stored in a separate history entry. \r\n\r\n[Read about Retrieving the History Entries of a Document with the yuuvis® API](https://yuuvis.io/Documentation/Retrieve-history-entries)\r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Validate content digest by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/actions/validate/digest",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"actions",
						"validate",
						"digest"
					]
				},
				"description": "For already imported documents, a content digest is automatically generated and stored (Secure Hash Algorythm, SHA256) \r\n\r\nTo validate the content digest for a stored document, you use the “Validate content digest by ID” endpoint. Send a request with the objectId which generates a new content digest based on the currently stored document. This newly generated content digest is compared with the formerly generated and stored one. \r\n\r\n[Read about Content Digest Generation and Validation with the yuuvis® API](https://yuuvis.io/Documentation/Import-and-store#ImportingDocumentsviaCoreAPI-ContentDigestGeneration) \r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Validate content digest by ID (specified version)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/versions/{{versionNr}}/actions/validate/digest",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"versions",
						"{{versionNr}}",
						"actions",
						"validate",
						"digest"
					]
				},
				"description": "The **“Validate content digest by ID (specified version)”** endpoint validates the content digest of the version matching the *versionNr* path parameter of the document (object) that matches the *objectId* path parameter. \r\n\r\n[Read about Content Digest Generation and Validation with the yuuvis® API](https://yuuvis.io/Documentation/Import-and-store#ImportingDocumentsviaCoreAPI-ContentDigestGeneration) \r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store) \r\n\r\nThe versionNr path parameter must point to an existing version of the specified object. [Read about versioning with the yuuvis® API.](https://yuuvis.io/Documentation/Update-documents#UpdatingDocumentsviaCoreAPI-Versioningversioning)"
			},
			"response": []
		},
		{
			"name": "Update document metadata by ID",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"objects\": [{\r\n\t\t\"properties\": {\r\n\t\t\t\"objectTypeId\": {\r\n\t\t\t\t\"value\": \"document\"\r\n\t\t\t},\r\n\t\t\t\"Name\": {\r\n\t\t\t\t\"value\": \"Update Email\"\r\n\t\t\t}\r\n\t\t}\r\n\t}]\r\n}"
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}"
					]
				},
				"description": "The **“Update document metadata by ID”** endpoint updates the metadata of the document (object) that matches the *objectId* path parameter. \r\n\r\nTo update the metadata send the request with the new metadata as request body and the ID of the document (object) as *objectId*. If one of the properties is missing in the new metadata, it will be removed from the document (object). \r\n\r\nMost of the system properties cannot be updated or are updated automatically. If the new metadata contains these properties, their values must match the values of the current version. Hence you can retrieve the current metadata using the “GET document metadata by ID“ endpoint first, to use the result. Edit some properties and post it again using this endpoint. \r\n\r\n[Read about Updating Documents with the yuuvis® API](https://yuuvis.io/Documentation/Update-documents)  \r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Update specified metadata properties",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"objects\": [{\r\n\t\t\"properties\": {\r\n\t\t\t\"Name\": {\r\n\t\t\t\t\"value\": \"Patched Email\"\r\n\t\t\t}\r\n\t\t}\r\n\t}]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}"
					]
				},
				"description": "The **“Update specified metadata properties“** endpoint updates only the attributes supplied by the request body in the metadata of the document (object) that matches the *objectId* path parameter. \n\n[Read about Updating Documents with the yuuvis® API](https://yuuvis.io/Documentation/Update-documents) \n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Update document content by ID",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/octet-stream",
						"disabled": true
					},
					{
						"key": "Content-Disposition",
						"value": "attachment; filename=\"image.jpg\""
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/contents/file",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"contents",
						"file"
					]
				},
				"description": "The **“Update document content by ID”** endpoint updates the content file of the document (object) that matches the *objectId* path parameter.\r\n\r\nYou can name the content by passing the file name over to the Content-Disposition header.\r\n\r\n[Read about Updating Documents with the yuuvis® API](https://yuuvis.io/Documentation/Update-documents) \r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Delete document by ID",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}"
					]
				},
				"description": "This **“Delete document by ID”** endpoint deletes the document (object) that matches the given *objectId* path parameter. \n\n[Read about Deleting Documents with the yuuvis® API](https://yuuvis.io/Documentation/Delete-documents)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Delete document by ID (specified version)",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{ip}}/dms-core/objects/{{objectId}}/versions/{{versionNr}}",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-core",
						"objects",
						"{{objectId}}",
						"versions",
						"{{versionNr}}"
					]
				},
				"description": "The **“Delete document by ID (specified version)”** endpoint deletes the version matching the *versionNr* path parameter of the document (object) that matches the *objectId* path parameter.\n\n[Read about Deleting Documents with the yuuvis® API](https://yuuvis.io/Documentation/Delete-documents)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store) \n\nThe versionNr path parameter must point to an existing version of the specified object. [Read about versioning with the yuuvis® API.](https://yuuvis.io/Documentation/Update-documents#UpdatingDocumentsviaCoreAPI-Versioningversioning)"
			},
			"response": []
		},
		{
			"name": "Get image rendition",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-view/objects/{{objectId}}/contents/renditions/slide",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-view",
						"objects",
						"{{objectId}}",
						"contents",
						"renditions",
						"slide"
					]
				},
				"description": "The **“Get Image Rendition”** endpoint generates and returns a PNG file of the content's first page of the document (object) that matches the *objectId* path parameter. This PNG file is a small preview with the maximum dimensions 256x256.\r\n\r\n[Read about Rendition Requests with the yuuvis® API](https://yuuvis.io/Documentation/Rendition-requests)\r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Get image rendition (specified version)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-view/objects/{{objectId}}/versions/{{versionNr}}/contents/renditions/slide",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-view",
						"objects",
						"{{objectId}}",
						"versions",
						"{{versionNr}}",
						"contents",
						"renditions",
						"slide"
					]
				},
				"description": "The **“Get Image Rendition”** endpoint generates and returns a PNG file of the content's first page of the version matching the *versionNr* path parameter of the document (object) that matches the *objectId* path parameter. This PNG file is a small preview with the maximum dimensions 256x256.\r\n\r\n[Read about Rendition Requests with the yuuvis® API](https://yuuvis.io/Documentation/Rendition-requests)\r\n\r\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store) \r\n\r\nThe versionNr path parameter must point to an existing version of the specified object. [Read about versioning with the yuuvis® API.](https://yuuvis.io/Documentation/Update-documents#UpdatingDocumentsviaCoreAPI-Versioningversioning)"
			},
			"response": []
		},
		{
			"name": "Get PDF rendition",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-view/objects/{{objectId}}/contents/renditions/pdf",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-view",
						"objects",
						"{{objectId}}",
						"contents",
						"renditions",
						"pdf"
					]
				},
				"description": "The **“Get PDF Rendition“** endpoint generates and returns a PDF rendition of the content of the document (object) that matches the *objectId* path parameter. \n\n[Read about Rendition Requests with the yuuvis® API](https://yuuvis.io/Documentation/Rendition-requests)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Get PDF rendition (specified version)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-view/objects/{{objectId}}/versions/{{versionNr}}/contents/renditions/pdf",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-view",
						"objects",
						"{{objectId}}",
						"versions",
						"{{versionNr}}",
						"contents",
						"renditions",
						"pdf"
					]
				},
				"description": "The **“Get PDF Rendition (specified version)”** endpoint generates and returns a PDF rendition of the content of the version matching the *versionNr* path parameter of the document (object) that matches the *objectId* path parameter. \n\n[Read about Rendition Requests with the yuuvis® API](https://yuuvis.io/Documentation/Rendition-requests)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store) \n\nThe versionNr path parameter must point to an existing version of the specified object. [Read about versioning with the yuuvis® API.](https://yuuvis.io/Documentation/Update-documents#UpdatingDocumentsviaCoreAPI-Versioningversioning)"
			},
			"response": []
		},
		{
			"name": "Get text rendition",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-view/objects/{{objectId}}/contents/renditions/text",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-view",
						"objects",
						"{{objectId}}",
						"contents",
						"renditions",
						"text"
					]
				},
				"description": "The **“Get Text Rendition”** endpoint generates and returns a text rendition of the content of the document (object) that matches the *objectId* path parameter.\n\n[Read about Rendition Requests with the yuuvis® API](https://yuuvis.io/Documentation/Rendition-requests)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Get text rendition (specified version)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-view/objects/{{objectId}}/versions/{{versionNr}}/contents/renditions/text",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-view",
						"objects",
						"{{objectId}}",
						"versions",
						"{{versionNr}}",
						"contents",
						"renditions",
						"text"
					]
				},
				"description": "The **“Get Text Rendition (version)”** endpoint generates and returns a text rendition of the content of the version matching the *versionNr* path parameter of the document (object) that matches the *objectId* path parameter.\n\n[Read about Rendition Requests with the yuuvis® API](https://yuuvis.io/Documentation/Rendition-requests)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store) \n\nThe versionNr path parameter must point to an existing version of the specified object. [Read about versioning with the yuuvis® API.](https://yuuvis.io/Documentation/Update-documents#UpdatingDocumentsviaCoreAPI-Versioningversioning)"
			},
			"response": []
		},
		{
			"name": "Get extraction rendition",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"url": {
					"raw": "{{ip}}/dms-view/objects/{{objectId}}/contents/renditions/extract",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms-view",
						"objects",
						"{{objectId}}",
						"contents",
						"renditions",
						"extract"
					]
				},
				"description": "The **“Get Extraction Rendition“** endpoint extracts and returns all metadata from the document (object) that matches the *objectId* path parameter.\n\n[Read about Rendition Requests with the yuuvis® API](https://yuuvis.io/Documentation/Rendition-requests)\n\nThe objectId path parameter must correspond to a previously imported object. [Read about importing objects with the yuuvis® API.](https://yuuvis.io/Documentation/Import-and-store)"
			},
			"response": []
		},
		{
			"name": "Get the applied tenant schema",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}/dms/schema/native",

					"host": [
						"{{ip}}"
					],
					"path": [
						"dms",
						"schema",
						"native"
					]
				},
				"description": "The **“Get the applied tenant schema“** endpoint returns the applied schema of the tenant (JSON / XML) belonging to you as the logged on user. The applied schema is the tenant schema, enhanced by the global schema and the system properties.\r\n\r\n[Learn about yuuvis® API schema](https://yuuvis.io/Documentation/Schema-definition)"
			},
			"response": []
		},
		{
			"name": "Get raw tenant schema",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ip}}/admin/schema",

					"host": [
						"{{ip}}"
					],
					"path": [
						"admin",
						"schema"
					]
				},
				"description": "The **“Get the raw tenant schema“** endpoint returns the raw schema of the tenant (XML) belonging to you as the logged on user.\r\n\r\n[Learn about yuuvis® API schema](https://yuuvis.io/Documentation/Schema-definition)"
			},
			"response": []
		},
		{
			"name": "Validate a schema",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{key}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{ip}}/admin/schema/validate",

					"host": [
						"{{ip}}"
					],
					"path": [
						"admin",
						"schema",
						"validate"
					]
				},
				"description": "The **“Validate a schema”** endpoint validates a schema and returns a list of validation error messages, if any.\r\n\r\n[Learn about yuuvis® API schema](https://yuuvis.io/Documentation/Schema-definition)"
			},
			"response": []
		},
		{
			"name": "Update the tenant schema",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{key}}"
					}
				],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{ip}}/admin/schema/",

					"host": [
						"{{ip}}"
					],
					"path": [
						"admin",
						"schema",
						""
					]
				},
				"description": "The **“Update the tenant schema”** endpoint validates your schema first, before it will completely overwrite the existing one. If the schema is not valid, no update takes place.\n\n[Learn about yuuvis® API schema](https://yuuvis.io/Documentation/Schema-definition)"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1c956d74-131d-4d75-a0a3-48124cfbedbd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "49b29f85-59d7-4c2c-9b33-bc0664d5b2d6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "77f21bf2-959e-46d2-b78c-929ba08deba9",
			"key": "objectId",
			"value": "",
			"type": "string"
		},
		{
			"id": "13a9c91d-b838-4285-b077-65a679eddc12",
			"key": "ip",
			"value": "https://api.yuuvis.io",
			"type": "string"
		},
		{
			"id": "d280e2c2-297e-49f3-98d2-ea2a2de94b66",
			"key": "key",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}
